{"ast":null,"code":"// Go to www.alchemy.com and create an account to grab your own api key!\nconst apiKey = \"GqYATYYw3GTJP7CiJk7hgTRVsKPQ701V\";\nconst endpoint = `https://eth-mainnet.alchemyapi.io/v2/${apiKey}`;\nexport const fetchNFTs = async (owner, contractAddress, setNFTs, retryAttempt) => {\n  if (retryAttempt === 5) {\n    return;\n  }\n\n  if (owner) {\n    let data;\n\n    try {\n      if (contractAddress) {\n        data = await fetch(`${endpoint}/getNFTs?owner=${owner}&contractAddresses%5B%5D=${contractAddress}`).then(data => data.json());\n      } else {\n        data = await fetch(`${endpoint}/getNFTs?owner=${owner}`).then(data => data.json());\n      }\n    } catch (e) {\n      fetchNFTs(endpoint, owner, contractAddress, setNFTs, retryAttempt + 1);\n    }\n\n    setNFTs(data.ownedNfts);\n    return data;\n  }\n};","map":{"version":3,"sources":["/Users/moaguilar/alchemy-nft-api/flex-nft-vault/src/utils/fetchNFTs.js"],"names":["apiKey","endpoint","fetchNFTs","owner","contractAddress","setNFTs","retryAttempt","data","fetch","then","json","e","ownedNfts"],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAG,kCAAf;AACA,MAAMC,QAAQ,GAAI,wCAAuCD,MAAO,EAAhE;AAEA,OAAO,MAAME,SAAS,GAAG,OAAOC,KAAP,EAAcC,eAAd,EAA+BC,OAA/B,EAAwCC,YAAxC,KAAyD;AAC9E,MAAIA,YAAY,KAAK,CAArB,EAAwB;AACpB;AACH;;AACD,MAAIH,KAAJ,EAAW;AACP,QAAII,IAAJ;;AACA,QAAI;AACA,UAAIH,eAAJ,EAAqB;AACjBG,QAAAA,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEP,QAAS,kBAAiBE,KAAM,4BAA2BC,eAAgB,EAA/E,CAAL,CAAuFK,IAAvF,CAA4FF,IAAI,IAAIA,IAAI,CAACG,IAAL,EAApG,CAAb;AACH,OAFD,MAEO;AACHH,QAAAA,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEP,QAAS,kBAAiBE,KAAM,EAApC,CAAL,CAA4CM,IAA5C,CAAiDF,IAAI,IAAIA,IAAI,CAACG,IAAL,EAAzD,CAAb;AACH;AACJ,KAND,CAME,OAAOC,CAAP,EAAU;AACRT,MAAAA,SAAS,CAACD,QAAD,EAAWE,KAAX,EAAkBC,eAAlB,EAAmCC,OAAnC,EAA4CC,YAAY,GAAC,CAAzD,CAAT;AACH;;AAEDD,IAAAA,OAAO,CAACE,IAAI,CAACK,SAAN,CAAP;AACA,WAAOL,IAAP;AACH;AACJ,CAnBM","sourcesContent":["// Go to www.alchemy.com and create an account to grab your own api key!\nconst apiKey = \"GqYATYYw3GTJP7CiJk7hgTRVsKPQ701V\";\nconst endpoint = `https://eth-mainnet.alchemyapi.io/v2/${apiKey}`;\n\nexport const fetchNFTs = async (owner, contractAddress, setNFTs, retryAttempt) => {\n    if (retryAttempt === 5) {\n        return;\n    }\n    if (owner) {\n        let data;\n        try {\n            if (contractAddress) {\n                data = await fetch(`${endpoint}/getNFTs?owner=${owner}&contractAddresses%5B%5D=${contractAddress}`).then(data => data.json())\n            } else {\n                data = await fetch(`${endpoint}/getNFTs?owner=${owner}`).then(data => data.json())\n            }\n        } catch (e) {\n            fetchNFTs(endpoint, owner, contractAddress, setNFTs, retryAttempt+1)\n        }\n\n        setNFTs(data.ownedNfts)\n        return data\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}