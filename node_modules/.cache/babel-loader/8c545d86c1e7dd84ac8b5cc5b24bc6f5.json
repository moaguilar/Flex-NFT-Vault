{"ast":null,"code":"var _jsxFileName = \"/Users/moaguilar/alchemy-nft-api/flex-nft-vault/src/pages/explore.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport NftCard from '../components/nftcard';\nimport { fetchNFTs } from '../utils/fetchNFTs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Explore = () => {\n  _s();\n\n  const [owner, setOwner] = useState(\"\");\n  const [contractAddress, setContractAddress] = useState(\"\");\n  const [NFTs, setNFTs] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \" py-24  mb-12 w-full   alchemy\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow flex justify-end mr-12 mb-12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center mb-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-16 text-white text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-5xl  font-bold font-body mb-2\",\n            children: \"Alchemy NFT Explorer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"An inspector to find NFTs by owner and contract address \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center justify-center mb-4 w-2/6 gap-y-2 \",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border rounded-sm focus:outline-none py-2 px-3 w-full\",\n            value: owner,\n            onChange: e => setOwner(e.target.value),\n            placeholder: \"Insert your wallet address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"focus:outline-none rounded-sm py-2 px-3 w-full\",\n            value: contractAddress,\n            onChange: e => setContractAddress(e.target.value),\n            placeholder: \"Insert NFT Contract address (optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-2/6 flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"py-3 bg-white rounded-sm w-full hover:bg-slate-100\",\n            onClick: () => {\n              fetchNFTs(owner, contractAddress, setNFTs);\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"flex flex-wrap justify-center\",\n      children: NFTs ? NFTs.map(NFT => {\n        return /*#__PURE__*/_jsxDEV(NftCard, {\n          image: NFT.media[0].gateway,\n          id: NFT.id.tokenId,\n          title: NFT.title,\n          address: NFT.contract.address,\n          description: NFT.description,\n          attributes: NFT.metadata.attributes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 28\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No NFTs found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Explore, \"F1K038gEZITq+XlGIlv6AxycUts=\");\n\n_c = Explore;\nexport default Explore;\n\nvar _c;\n\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"sources":["/Users/moaguilar/alchemy-nft-api/flex-nft-vault/src/pages/explore.jsx"],"names":["useState","NftCard","fetchNFTs","Explore","owner","setOwner","contractAddress","setContractAddress","NFTs","setNFTs","e","target","value","map","NFT","media","gateway","id","tokenId","title","contract","address","description","metadata","attributes"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAGA,sBACI;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,gCAAlB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAC,+DAAf;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,uDAAjB;AAAyE,YAAA,KAAK,EAAEI,KAAhF;AAAuF,YAAA,QAAQ,EAAGM,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhH;AAAkI,YAAA,WAAW,EAAC;AAA9I;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,SAAS,EAAC,gDAAjB;AAAkE,YAAA,KAAK,EAAEN,eAAzE;AAA0F,YAAA,QAAQ,EAAGI,CAAD,IAAOH,kBAAkB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7H;AAA+I,YAAA,WAAW,EAAC;AAA3J;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAWI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,iCACA;AAAQ,YAAA,SAAS,EAAC,oDAAlB;AAAuE,YAAA,OAAO,EAAE,MAAM;AAACV,cAAAA,SAAS,CAACE,KAAD,EAAQE,eAAR,EAAyBG,OAAzB,CAAT;AAA+C,aAAtI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAqBI;AAAS,MAAA,SAAS,EAAC,+BAAnB;AAAA,gBAEQD,IAAI,GAAGA,IAAI,CAACK,GAAL,CAASC,GAAG,IAAI;AAEnB,4BACG,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAaC,OAA7B;AAAsC,UAAA,EAAE,EAAEF,GAAG,CAACG,EAAJ,CAAOC,OAAjD;AAA2D,UAAA,KAAK,EAAEJ,GAAG,CAACK,KAAtE;AAA6E,UAAA,OAAO,EAAEL,GAAG,CAACM,QAAJ,CAAaC,OAAnG;AAA4G,UAAA,WAAW,EAAEP,GAAG,CAACQ,WAA7H;AAA0I,UAAA,UAAU,EAAER,GAAG,CAACS,QAAJ,CAAaC;AAAnK;AAAA;AAAA;AAAA;AAAA,gBADH;AAGH,OALM,CAAH,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPb;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CAzCD;;GAAMrB,O;;KAAAA,O;AA4CN,eAAeA,OAAf","sourcesContent":["\nimport { useState } from 'react';\nimport NftCard from '../components/nftcard';\nimport {fetchNFTs} from '../utils/fetchNFTs';\n\nconst Explore = () => {\n\n    const [owner, setOwner] = useState(\"\")\n    const [contractAddress, setContractAddress] = useState(\"\")\n    const [NFTs, setNFTs] = useState(\"\")\n    \n\n    return (\n        <div>\n            <header className=' py-24  mb-12 w-full   alchemy'>\n                <div className='flex-grow flex justify-end mr-12 mb-12'>\n                </div>\n                <div className='flex flex-col items-center mb-12'>\n                    <div className='mb-16 text-white text-center'>\n                        <h1 className='text-5xl  font-bold font-body mb-2'>\n                            Alchemy NFT Explorer\n                        </h1>\n                        <p>An inspector to find NFTs by owner and contract address </p>\n                    </div>\n                    <div className='flex flex-col items-center justify-center mb-4 w-2/6 gap-y-2 '>\n                        <input className=\"border rounded-sm focus:outline-none py-2 px-3 w-full\" value={owner} onChange={(e) => setOwner(e.target.value)} placeholder='Insert your wallet address'></input>\n                        <input className=\"focus:outline-none rounded-sm py-2 px-3 w-full\" value={contractAddress} onChange={(e) => setContractAddress(e.target.value)} placeholder='Insert NFT Contract address (optional)'></input>\n                    </div>\n                    <div className='w-2/6 flex justify-center'>\n                    <button className='py-3 bg-white rounded-sm w-full hover:bg-slate-100' onClick={() => {fetchNFTs(owner, contractAddress, setNFTs    )}}>Search</button>\n                    </div>\n                </div>\n            </header>\n\n            <section className='flex flex-wrap justify-center'>\n                {\n                    NFTs ? NFTs.map(NFT => {\n                       \n                        return (\n                           <NftCard image={NFT.media[0].gateway} id={NFT.id.tokenId } title={NFT.title} address={NFT.contract.address} description={NFT.description} attributes={NFT.metadata.attributes} ></NftCard>\n                        )\n                    }) : <div>No NFTs found</div>\n                }\n            </section>\n        </div>\n    )\n}\n\n\nexport default Explore"]},"metadata":{},"sourceType":"module"}